{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Configure (RelWithDebInfoOS)",
            "type": "shell",
            "command": "autobuild",
            "args": [
                "configure",
                "-c",
                "RelWithDebInfoOS",
                "-A",
                "64"
            ],
            "windows": {
                "options": {
                    "shell": {
                        "executable": "cmd.exe",
                        "args": ["/d", "/c"]
                    }
                }
            },
            "group": "build",
            "problemMatcher": [],
            "detail": "Configure the project for RelWithDebInfoOS build using Autobuild"
        },
        {
            "label": "Configure (ReleaseOS)",
            "type": "shell",
            "command": "autobuild",
            "args": [
                "configure",
                "-c",
                "ReleaseOS",
                "-A",
                "64"
            ],
            "windows": {
                "options": {
                    "shell": {
                        "executable": "cmd.exe",
                        "args": ["/d", "/c"]
                    }
                }
            },
            "group": "build",
            "problemMatcher": [],
            "detail": "Configure the project for ReleaseOS build using Autobuild"
        },
        {
            "label": "Configure (Attended Mode)",
            "type": "shell",
            "command": "autobuild",
            "args": [
                "configure",
                "-c",
                "${input:buildConfiguration}",
                "-A",
                "64",
                "--",
                "-DUNATTENDED:BOOL=FALSE"
            ],
            "windows": {
                "options": {
                    "shell": {
                        "executable": "cmd.exe",
                        "args": ["/d", "/c"]
                    }
                }
            },
            "group": "build",
            "problemMatcher": [],
            "detail": "Configure for Visual Studio attended mode (opens VS solution)"
        },
        {
            "label": "Build (RelWithDebInfoOS)",
            "type": "shell",
            "command": "autobuild",
            "args": [
                "build",
                "-c",
                "RelWithDebInfoOS",
                "--no-configure"
            ],
            "windows": {
                "options": {
                    "shell": {
                        "executable": "cmd.exe",
                        "args": ["/d", "/c", "eval $(autobuild source_environment) &&"]
                    }
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$msCompile",
            "dependsOn": "Configure (RelWithDebInfoOS)",
            "detail": "Build the Second Life viewer in RelWithDebInfoOS mode"
        },
        {
            "label": "Build (ReleaseOS)",
            "type": "shell",
            "command": "autobuild",
            "args": [
                "build",
                "-c",
                "ReleaseOS",
                "--no-configure"
            ],
            "windows": {
                "options": {
                    "shell": {
                        "executable": "cmd.exe",
                        "args": ["/d", "/c", "eval $(autobuild source_environment) &&"]
                    }
                }
            },
            "group": "build",
            "problemMatcher": "$msCompile",
            "dependsOn": "Configure (ReleaseOS)",
            "detail": "Build the Second Life viewer in ReleaseOS mode"
        },
        {
            "label": "Open Visual Studio Solution",
            "type": "shell",
            "windows": {
                "command": "start",
                "args": [
                    "devenv.exe",
                    "${workspaceFolder}\\build-vc${env:AUTOBUILD_VSVER}-64\\SecondLife.sln"
                ]
            },
            "osx": {
                "command": "open",
                "args": [
                    "${workspaceFolder}/build-darwin-x86_64/SecondLife.xcodeproj"
                ]
            },
            "linux": {
                "command": "echo",
                "args": [
                    "Visual Studio is not available on Linux. Use command line build."
                ]
            },
            "group": "build",
            "problemMatcher": [],
            "dependsOn": "Configure (Attended Mode)",
            "detail": "Open the generated solution in Visual Studio or Xcode"
        },
        {
            "label": "Incremental Build",
            "type": "shell",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build-linux-x86_64",
                "-j${env:NUMBER_OF_PROCESSORS}"
            ],
            "windows": {
                "args": [
                    "--build",
                    "${workspaceFolder}/build-vc${env:AUTOBUILD_VSVER}-64",
                    "-j${env:NUMBER_OF_PROCESSORS}"
                ]
            },
            "osx": {
                "args": [
                    "--build",
                    "${workspaceFolder}/build-darwin-x86_64",
                    "-j${env:NUMBER_OF_PROCESSORS}"
                ]
            },
            "group": "build",
            "problemMatcher": "$gcc",
            "detail": "Quick incremental build without reconfiguration"
        },
        {
            "label": "Clean Build",
            "type": "shell",
            "command": "autobuild",
            "args": [
                "build",
                "-c",
                "ReleaseOS",
                "--clean"
            ],
            "group": "build",
            "problemMatcher": [],
            "detail": "Clean all build artifacts"
        },
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "autobuild",
            "args": [
                "install"
            ],
            "group": "build",
            "problemMatcher": [],
            "detail": "Install third-party dependencies using Autobuild"
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build-linux-x86_64",
                "--target",
                "test"
            ],
            "windows": {
                "args": [
                    "--build",
                    "${workspaceFolder}/build-vc${env:AUTOBUILD_VSVER}-64",
                    "--target",
                    "RUN_TESTS"
                ]
            },
            "osx": {
                "args": [
                    "--build",
                    "${workspaceFolder}/build-darwin-x86_64",
                    "--target",
                    "test"
                ]
            },
            "group": "test",
            "problemMatcher": "$gcc",
            "detail": "Run all unit tests"
        },
        {
            "label": "Package Viewer",
            "type": "shell",
            "command": "autobuild",
            "args": [
                "package",
                "-c",
                "ReleaseOS"
            ],
            "group": "build",
            "problemMatcher": [],
            "detail": "Create a distributable package of the viewer"
        },
        {
            "label": "Generate CMake Cache",
            "type": "shell",
            "command": "cmake",
            "args": [
                "-S",
                "${workspaceFolder}/indra",
                "-B",
                "${workspaceFolder}/build-linux-x86_64",
                "-DCMAKE_BUILD_TYPE=${input:buildType}",
                "-DLL_TESTS=ON",
                "-DVIEWER=ON",
                "-DPACKAGE=ON"
            ],
            "windows": {
                "args": [
                    "-S",
                    "${workspaceFolder}/indra",
                    "-B",
                    "${workspaceFolder}/build-vc${env:AUTOBUILD_VSVER}-64",
                    "-G",
                    "Visual Studio 17 2022",
                    "-A",
                    "x64",
                    "-DCMAKE_BUILD_TYPE=${input:buildType}",
                    "-DLL_TESTS=ON",
                    "-DVIEWER=ON",
                    "-DPACKAGE=ON"
                ]
            },
            "osx": {
                "args": [
                    "-S",
                    "${workspaceFolder}/indra",
                    "-B",
                    "${workspaceFolder}/build-darwin-x86_64",
                    "-G",
                    "Xcode",
                    "-DCMAKE_BUILD_TYPE=${input:buildType}",
                    "-DLL_TESTS=ON",
                    "-DVIEWER=ON",
                    "-DPACKAGE=ON"
                ]
            },
            "group": "build",
            "problemMatcher": [],
            "detail": "Generate CMake cache directly (alternative to autobuild configure)"
        },
        {
            "label": "Build Specific Target",
            "type": "shell",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build-linux-x86_64",
                "--target",
                "${input:targetName}",
                "-j${env:NUMBER_OF_PROCESSORS}"
            ],
            "windows": {
                "args": [
                    "--build",
                    "${workspaceFolder}/build-vc${env:AUTOBUILD_VSVER}-64",
                    "--target",
                    "${input:targetName}",
                    "-j${env:NUMBER_OF_PROCESSORS}"
                ]
            },
            "osx": {
                "args": [
                    "--build",
                    "${workspaceFolder}/build-darwin-x86_64",
                    "--target",
                    "${input:targetName}",
                    "-j${env:NUMBER_OF_PROCESSORS}"
                ]
            },
            "group": "build",
            "problemMatcher": "$gcc",
            "detail": "Build a specific CMake target"
        }
    ],
    "inputs": [
        {
            "id": "buildConfiguration",
            "type": "pickString",
            "description": "Select build configuration",
            "options": [
                "ReleaseOS",
                "RelWithDebInfoOS"
            ],
            "default": "RelWithDebInfoOS"
        },
        {
            "id": "buildType",
            "type": "pickString",
            "description": "Select build type",
            "options": [
                "Debug",
                "Release",
                "RelWithDebInfo",
                "MinSizeRel"
            ],
            "default": "RelWithDebInfo"
        },
        {
            "id": "targetName",
            "type": "promptString",
            "description": "Enter the CMake target name to build",
            "default": "secondlife-bin"
        }
    ]
}
